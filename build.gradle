plugins {
    id 'java'
    id 'de.fuerstenau.buildconfig' version '1.1.4'
}

version = '4.0'
group = 'cn.matrixaura.lepton'
archivesBaseName = 'Lepton'

def execute(String cmd) {
    try {
        def stdout = new ByteArrayOutputStream()

        exec {
            commandLine cmd.split(" ")
            standardOutput = stdout
        }

        return stdout.toString().trim()
    } catch (ignored) {
        return null
    }
}

buildConfig {
    buildConfigField "String", "HASH", "${execute("git rev-parse --short HEAD")}"
    buildConfigField "String", "BRANCH", "${execute("git branch").replace("* ", "")}"
    buildConfigField "String", "VERSION", "${project.version}"

    packageName "cn.matrixaura.lepton"
}

sourceSets.main.java.srcDirs += "build/gen/buildconfig/src/main"

sourceCompatibility = targetCompatibility = '8'
compileJava {
    sourceCompatibility = targetCompatibility = '8'
    options.encoding 'UTF-8'
}

repositories {
    mavenCentral()
}

configurations {
    dependency
    implementation.extendsFrom dependency
}

task runGeneratedJar(dependsOn: ['jar']) {
    doLast {
        String generatedJarName = jar.archiveFileName.get()
        exec {
            // 运行JAR文件
            commandLine 'java', '-jar', "build/libs/${generatedJarName}"
        }
    }
}

dependencies {
    dependency 'org.ow2.asm:asm-all:5.2'
    dependency 'net.java.dev.jna:jna:5.13.0'
    dependency 'net.java.dev.jna:jna-platform:5.13.0'

    dependency fileTree(dir: 'libs', includes: ['*.jar'])

    implementation fileTree("mclibs/")
    annotationProcessor 'org.projectlombok:lombok:1.18.28'
}

jar {
    from(configurations.dependency.collect { it.isDirectory() ? it : zipTree(it) })

    manifest.attributes(
            'Agent-Class': 'cn.matrixaura.lepton.inject.AgentMain',
            'Main-Class': 'cn.matrixaura.lepton.Main',
            'Can-Redefine-Classes': 'true'
    )
}
